var $jscomp={scope:{},inherits:function(a,b){function d(){}d.prototype=b.prototype;a.prototype=new d;a.prototype.constructor=a;for(var c in b)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(b,c);e&&Object.defineProperty(a,c,e)}else a[c]=b[c]}},Ball=function(a,b,d,c,e,f,g){a=Circle.call(this,a,b,d)||this;a.velocityX=c;a.velocityY=e;a.speed=f;a.color=g;return a};$jscomp.inherits(Ball,Circle);
Ball.prototype.colision=function(a){return colisionEachCircle(new Circle(this.x,this.y,getRelativeSize(this.radius)),new Circle(a.x,a.y,getRelativeSize(a.radius)))};Ball.prototype.next=function(){return new Circle(this.x+this.velocityX,this.y+this.velocityY,this.radius)};
