var $jscomp={scope:{},getGlobal:function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a}};$jscomp.global=$jscomp.getGlobal(this);$jscomp.inherits=function(a,c){function b(){}b.prototype=c.prototype;a.prototype=new b;a.prototype.constructor=a;for(var d in c)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(c,d);e&&Object.defineProperty(a,d,e)}else a[d]=c[d]};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.fill",function(a){return a?a:function(a,b,d){var c=this.length||0;0>b&&(b=Math.max(0,c+b));if(null==d||d>c)d=c;d=Number(d);0>d&&(d=Math.max(0,c+d));for(b=Number(b||0);b<d;b++)this[b]=a;return this}},"es6-impl","es3");
var canvas=document.getElementById("canvas_ball"),context=canvas.getContext("2d"),timeout=null,balls=[],Ball=function(a,c,b,d,e,f){a=void 0===a?0:a;c=void 0===c?0:c;d=void 0===d?0:d;e=void 0===e?1:e;f=void 0===f?"":f;b=Circle.call(this,a,c,void 0===b?1:b)||this;b.x=a;b.y=c;b.speed=e;b.angle=d;b.color=f;return b};$jscomp.inherits(Ball,Circle);Ball.prototype.colision=function(a){return colisionEachCircle(new Circle(this.x,this.y,this.relativeRadius),new Circle(a.x,a.y,a.relativeRadius))};
Ball.prototype.next=function(){var a=angleToVec(this.angle);return new Circle(this.x+a.x*this.rspeed,this.y+a.y*this.rspeed,this.radius)};$jscomp.global.Object.defineProperties(Ball.prototype,{relativeRadius:{configurable:!0,enumerable:!0,get:function(){return this.radius*Math.sqrt(canvas.clientWidth*canvas.clientHeight,2)/100}},rspeed:{configurable:!0,enumerable:!0,get:function(){return this.speed/100}}});
function generate(){canvas.width=canvas.clientWidth;canvas.height=canvas.clientHeight;context.clearRect(0,0,canvas.width,canvas.height);balls=[];for(var a=0;10>=balls.length&&1E4>a;){var c=rand(0,canvas.clientWidth),b=rand(0,canvas.clientHeight),d=rand(1,360),e=rand(100,200),f=rand(3,5),g="rgb("+[rand(0,255),rand(0,255),rand(0,255)]+")",c=new Ball(c,b,f,d,e,g),b=c.relativeRadius,b=c.x<b||c.x>canvas.width-b||c.y<b||c.y>canvas.height-b;if(!b)for(index in balls)if(c.colision(balls[index])){b=!0;break}b?
a++:balls.push(c)}render()}function move(){canvas.width=canvas.clientWidth;canvas.height=canvas.clientHeight;for(index in balls){var a=balls[index],c=a.next(),b=a.relativeRadius;for(index in balls){var d=balls[index];if(a!=d&&a.colision(d)){a.angle=vecToAngle(c,d);c=a.next();break}}if(c.x<b||c.x>canvas.width-b)a.angle=2*Math.PI-a.angle;else if(c.y<b||c.y>canvas.height-b)a.angle=Math.PI-a.angle;a.from(c)}timeout=setTimeout(onTick,1)}
function render(){canvas.width=canvas.clientWidth;canvas.height=canvas.clientHeight;context.clearRect(0,0,canvas.width,canvas.height);for(index in balls){var a=balls[index];context.beginPath();context.fillStyle=a.color;context.arc(a.x,a.y,a.relativeRadius,0,2*Math.PI,!0);context.closePath();context.fill()}}function onTick(){move();render()}function toggle(){timeout?timeout=clearTimeout(timeout):onTick()}function rand(a,c){return Math.floor(Math.random()*(c-a+1)+a)};
