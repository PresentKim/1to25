var $jscomp={scope:{},inherits:function(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a;for(var d in b)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(b,d);e&&Object.defineProperty(a,d,e)}else a[d]=b[d]}},Vector2=function(a,b){this.x=void 0===a?0:a;this.y=void 0===b?0:b};Vector2.prototype.add=function(a){this.x+=a.x;this.y+=a.y};Vector2.prototype.subtract=function(a){this.x-=a.x;this.y-=a.y};
Vector2.prototype.multiply=function(a){this.x*=a.x;this.y*=a.y};Vector2.prototype.divide=function(a){this.x/=a.x;this.y/=a.y};Vector2.prototype.from=function(a){this.x=a.x;this.y=a.y};var Rectangle=function(a,b,c,d){c=void 0===c?1:c;d=void 0===d?1:d;Vector2.call(this,void 0===a?0:a,void 0===b?0:b);this.height=c;this.width=d};$jscomp.inherits(Rectangle,Vector2);var Circle=function(a,b,c){c=void 0===c?1:c;Vector2.call(this,void 0===a?0:a,void 0===b?0:b);this.radius=c};$jscomp.inherits(Circle,Vector2);
function colisionEachCircle(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))<a.radius+b.radius}function vecToAngle(a,b){return 180*Math.atan2(a.y-b.y,a.x-b.x)/Math.PI}function angleToVec(a){return{x:-Math.sin(a),y:-Math.cos(a)}};
