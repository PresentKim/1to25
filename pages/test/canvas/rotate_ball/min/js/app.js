var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,d){if(d.get||d.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=d.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,c,d,b){if(c){d=$jscomp.global;a=a.split(".");for(b=0;b<a.length-1;b++){var e=a[b];e in d||(d[e]={});d=d[e]}a=a[a.length-1];b=d[a];c=c(b);c!=b&&null!=c&&$jscomp.defineProperty(d,a,{configurable:!0,writable:!0,value:c})}};$jscomp.polyfill("Array.prototype.fill",function(a){return a?a:function(a,d,b){var c=this.length||0;0>d&&(d=Math.max(0,c+d));if(null==b||b>c)b=c;b=Number(b);0>b&&(b=Math.max(0,c+b));for(d=Number(d||0);d<b;d++)this[d]=a;return this}},"es6-impl","es3");
var gridContainer=null,canvas=document.createElement("canvas");canvas.setAttribute("id","rotate_ball");canvas.setAttribute("class","bordered");var context=canvas.getContext("2d"),handle=null,dots=[],circles=[],lastRelativeSize=1;
w3.includeHTML(function(){addButton("Back","../../canvas.html");gridContainer=document.getElementById("grid-container");document.getElementById("title-text").innerText=document.title="Rotate Ball";document.getElementById("intro").innerHTML="";document.getElementById("grid-container").appendChild(canvas);canvas.width=gridContainer.clientWidth;canvas.height=gridContainer.clientHeight;lastRelativeSize=getRelativeSize(1);generate();toggle()});
function generate(){canvas.width=gridContainer.clientWidth;canvas.height=gridContainer.clientHeight;context.clearRect(0,0,canvas.width,canvas.height);balls=[];circles=[];for(var a=new Vector2(canvas.width/2,canvas.height/2),c=Math.sqrt(canvas.width*canvas.height,2)/3,d=0;360>d;d+=15){var b=(d+7.5)*Math.PI/180,b=angleToDirection(b).multiply(new Vector2(c,c),!0).add(a,!0);balls.push(new Circle(b.x,b.y,3));0==d%30&&(b=d*Math.PI/180,b=angleToDirection(b).multiply(new Vector2(c,c),!0).add(a,!0),b=new Circle(b.x,
b.y,13),b.angle=0,circles.push(b))}render()}function move(){new Vector2(canvas.width/2,canvas.height/2);for(i in circles){var a=[balls[2*i+1],balls[0>2*i-2?24-2*i-2:2*i-2]],c=getRelativeSize(circles[i].radius),c=angleToDirection(circles[i].angle+i*Math.PI/12).multiply(new Vector2(c,c),!0);a[0].from(circles[i].add(c,!0));a[1].from(circles[i].subtract(c,!0));circles[i].angle+=Math.PI/100;circles[i].angle>Math.PI&&(circles[i].angle%=Math.PI)}}
function render(){canvas.width=gridContainer.clientWidth;canvas.height=gridContainer.clientHeight;var a=getRelativeSize(1);if(lastRelativeSize!=a){var c=a/lastRelativeSize;lastRelativeSize=a;a=new Vector2(c,c);for(i in circles)circles[i].multiply(a);for(i in balls)balls[i].multiply(a)}context.clearRect(0,0,canvas.width,canvas.height);a=new Vector2(canvas.width/2,canvas.height/2);for(i in circles)context.beginPath(),context.strokeStyle=(new ColorHSLA(vecToAngle(circles[i],a)+120,100,50,.5)).toString(),
context.shadowBlur=10,context.shadowColor=context.strokeStyle,context.lineWidth=.5*lastRelativeSize,context.arc(circles[i].x,circles[i].y,getRelativeSize(circles[i].radius),0,2*Math.PI,!0),context.stroke(),context.closePath();for(i in balls)context.beginPath(),context.fillStyle=(new ColorHSLA(vecToAngle(balls[i],a)+120)).toString(),context.shadowBlur=10,context.shadowColor="gray",context.arc(balls[i].x,balls[i].y,getRelativeSize(balls[i].radius),0,2*Math.PI,!0),context.fill(),context.closePath()}
function onUpdate(){render();move();handle=requestAnimationFrame(onUpdate)}function toggle(){handle?handle=cancelAnimationFrame(handle):onUpdate()};
